#pragma once

// Standard includes
#include <string>

// ROOT includes
#include <TTree.h>


namespace root2hdf5
{
    namespace tree
    {
        namespace structure
        {
            // This method returns the unique struct typename that will be used
            // in the code generated by struct_code_for_tree.
            std::string struct_type_name_for_tree(TTree *tree);

            // This method will generate C++ code representing a struct suitable
            // for mapping a TTree into and writing an HDF5 dataset from, and
            // inform CINT of its existence.  Unsupported branch datatypes are 
            // ignored.  Return true on success, false on failure.  One can
            // optionally pass a non-NULL value to the "code" parameter and have
            // it filled with the generated code, although this is mostly for
            // testing the generated code and not strictly-necessary
            bool create_struct_code_for_tree(TTree *tree,
                                             std::string *code = NULL);
        }
    }
}
