#pragma once

// Standard includes
#include <string>

// ROOT includes
#include <TTree.h>


namespace root2hdf5
{
    namespace tree
    {
        namespace structure
        {
            // This method returns the unique struct typename that will be used
            // in the code generated by struct_code_for_tree.
            std::string struct_type_name_for_tree(TTree *tree);

            // This method will generate C++ code representing a struct suitable
            // for mapping a TTree into and writing an HDF5 dataset from.
            // Unsupported branch datatypes are ignored, and complex
            // (non-scalar) datatypes may be mapped to a struct member with
            // different type that will be filled from an intermediate buffer
            // using a converter generated by TODO: Insert conversion function
            // name.  This function returns an empty string on failure.
            std::string struct_code_for_tree(TTree *tree);
        }
    }
}
